import{S as y,a as h,i as c}from"./assets/vendor-DXKtl-Fy.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))o(t);new MutationObserver(t=>{for(const s of t)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function a(t){const s={};return t.integrity&&(s.integrity=t.integrity),t.referrerPolicy&&(s.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?s.credentials="include":t.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(t){if(t.ep)return;t.ep=!0;const s=a(t);fetch(t.href,s)}})();let p=new y(".gallery a",{captionsData:"alt",captionDelay:250});function g(e){const r=document.querySelector(".gallery");if(!r){console.error("Gallery container not found!");return}const a=e.map(o=>`
    <li class="gallery-item">
      <a href="${o.largeImageURL}">
        <img src="${o.webformatURL}" alt="${o.tags}" loading="lazy">
      </a>
      <div class="info">
        <p><b>Likes:</b> ${o.likes}</p>
        <p><b>Views:</b> ${o.views}</p>
        <p><b>Comments:</b> ${o.comments}</p>
        <p><b>Downloads:</b> ${o.downloads}</p>
      </div>
    </li>
  `).join("");r.insertAdjacentHTML("beforeend",a),p.refresh()}function b(){const e=document.querySelector(".gallery");e&&(e.innerHTML="")}function L(){const e=document.querySelector(".loader");e&&e.classList.remove("hidden")}function w(){const e=document.querySelector(".loader");e&&e.classList.add("hidden")}const P="52507179-0a3bafb5b272d1890f0df5cc7",v="https://pixabay.com/api/",E=15;async function S(e,r=1){try{return(await h.get(v,{params:{key:P,q:e,image_type:"photo",orientation:"horizontal",safesearch:!0,page:r,per_page:E}})).data}catch(a){throw console.error("Pixabay API error:",a),a}}const u=document.querySelector(".form"),i=document.querySelector(".load-more");let d="",n=1,f=0;const q=15;u.addEventListener("submit",async e=>{if(e.preventDefault(),d=u.elements["search-text"].value.trim(),n=1,b(),i.classList.add("hidden"),!d){c.error({title:"Error",message:"Enter a search term!"});return}await m()});i.addEventListener("click",async()=>{n+=1,await m(!0)});async function m(e=!1){try{L();const r=await S(d,n);if(!r.hits||r.hits.length===0){n===1&&c.show({message:"Sorry, there are no images matching your search query.<br>Please try again!",position:"topRight",timeout:4e3,close:!0,progressBar:!1,backgroundColor:"#f44336",messageColor:"#fff",layout:2,maxWidth:420,class:"custom-toast",icon:"fa fa-times-circle"}),i.classList.add("hidden");return}g(r.hits),f=r.totalHits;const a=Math.ceil(f/q);if(n<a?i.classList.remove("hidden"):(i.classList.add("hidden"),c.info({message:"We're sorry, but you've reached the end of search results.",position:"topRight",timeout:4e3})),e){const o=document.querySelector(".gallery-item");if(o){const{height:t}=o.getBoundingClientRect();window.scrollBy({top:t*2,behavior:"smooth"})}}}catch(r){c.error({title:"Error",message:"Failed to fetch images. Try later!"}),console.error("API Error:",r)}finally{w()}}
//# sourceMappingURL=index.js.map
